daml 1.2
module Iou where
data Amount = Amount {value: Decimal; currency: Text} deriving (Eq, Ord, Show)
amountAsText (amount : Amount) : Text = show amount.value <> amount.currency

template Iou
  with
    issuer: Party
    owner: Party
    amount: Amount
    observers: [Party]
  where
    signatory issuer
    observer owner, observers
    ensure amount.value > 0.0

    choice Disclose : ContractId Iou
      with
        newObserver : Party
      controller owner
      do
        create this with observers = newObserver :: observers

    choice Transfer : ContractId Iou
      with newOwner : Party
      controller owner
        do
          create this
            with
              owner = newOwner
              -- Keep all Ious visible to all parties
              -- observers = []

    choice Split : (ContractId Iou, ContractId Iou)
      with
        newAmount: Decimal
      controller owner
      do
        a <- create this with
          amount = Amount newAmount amount.currency
        b <- create this with
          amount = Amount (amount.value - newAmount) amount.currency
        return (a, b)
